{"version":3,"sources":["Components/Items.js","App.js","reportWebVitals.js","index.js"],"names":["Item","_useState","useState","_useState2","Object","slicedToArray","taskList","setTaskList","_useState3","_useState4","task","setTask","_useState5","_useState6","editTask","setEditTask","_useState7","_useState8","editingText","setEditingText","react_default","a","createElement","className","type","id","name","placeholder","onChange","e","target","value","text","onClick","event","preventDefault","taskDetails","Math","floor","random","isCompleted","includes","alert","concat","toConsumableArray","map","todo","element","findIndex","elem","newTaskList","objectSpread","taskCompleted","filter","t","deleteButton","updatedTodos","editButton","App","Components_Items","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a5767a6c.chunk.js","sourcesContent":["//import { Details } from '@material-ui/icons';\r\nimport React, {useState} from 'react';\r\nimport './Items.css';\r\n\r\n\r\n\r\nfunction Item() {\r\n\r\n\t    const[taskList, setTaskList]= useState([])\r\n\t\tconst[task, setTask] = useState('');\r\n\t\tconst [editTask, setEditTask] = useState(null)\r\n\t\tconst [editingText, setEditingText] = useState('')\r\n\r\n\t\t\r\n\r\n\r\n\r\n\t\tconst handleChange = (e) => {\r\n\t\tsetTask(e.target.value);\r\n\r\n\t\t}\r\n\t\tfunction AddTask(event) {\r\n\t      event.preventDefault()\r\n\t\t \r\n\t\t\r\n\t\t const taskDetails = {\r\n\t\t\tid: Math.floor(Math.random()*1000),\r\n\t\t\ttext: task,\r\n\t\t\tisCompleted: false,\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\tif(task !== '')\t{\r\n\t\t\tif(!taskList.includes(taskDetails)) {\r\n\t\t\t\r\n\t\t\t\tsetTaskList([...taskList, taskDetails]);\r\n\t\t\t     setTask('')\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\talert(\"task already in the list\")\r\n\t\t\t}\r\n    \t}\t\r\n\t      else{\r\n\t\talert(\"please enter a new task\")\r\n\t  } \r\n\r\n\t  \r\n\t  \r\n\t}\r\n\t\r\n\t\r\n\t\tconst deleteButton = (e, id) => {\r\n\t\t\te.preventDefault();\r\n\t\t\t   setTaskList(taskList.filter((t) => t.id !== id))\r\n\t\t}\r\n\r\n\t\tconst taskCompleted = (e, id) => {\r\n\t\t\te.preventDefault();\r\n\t\t\t// find index of element\r\n\t  \t\tconst element = taskList.findIndex((elem) => elem.id === id);\r\n\t\t\t// copy array into new variable\r\n\t\t\tconst newTaskList = [...taskList];\r\n            // edit our element\r\n\t\t\tnewTaskList[element] = {\r\n\t\t\t...newTaskList[element],\r\n\t\t\t\tisCompleted: true,\r\n\t\t\t}\r\n\t\t\t\tsetTaskList(newTaskList);\r\n\t\t}\r\n\r\n\t\t\r\n\t\tfunction editButton(id) {\r\n\t\t\tconst updatedTodos = taskList.map((todo) => {\r\n\t\t\t\tif (todo.id !== \"\") {\r\n\t\t\t\t\ttodo.text = editingText\r\n\t\t\t\t} else{\r\n\t\t\t\t\talert('please enter a text')\r\n\t\t\t\t}\r\n\t\t\t\treturn todo\r\n\t\t\t\t\r\n\t\t\t})\r\n\t\t\tsetTaskList(updatedTodos)\r\n\t\t\tsetEditTask(null)\r\n\t\t\tsetEditingText(\"\")\r\n\t\t}\r\n\r\n\t\treturn(\r\n\r\n\t\t<section className='form-area'>\r\n\t\t\t<div className=\"items\">\r\n\t\t\t\t<h1>React Todos App</h1>\r\n\r\n\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tid= \"text\"\r\n\t\t\t\tname=\"text\"\r\n\t\t\t\tplaceholder=\"AddTask\"\r\n\t\t\t\tonChange={handleChange} text={task}\r\n\t\t\t\t\r\n\r\n\t\t\t\t\t/>\r\n\r\n\r\n\t\t<button \r\n\t\t\t  className=\"add-btn\"  \r\n\t\t    \tonClick={AddTask}\r\n\t\t\t\t>\r\n\t\t\t\tAddTask\r\n\t  \t\t\t</button>\r\n\t\t \t \t <br/>\r\n\t\t \t\t\t  {taskList !== [] ? (\r\n\t\t<ul>\r\n\t\t\t{taskList.map((todo) => (\r\n\t\t\t<li className={todo.isCompleted ? \"crossText\" : \"listitem\"}>\r\n\t\t\t\t\r\n\t\t\t\t{editTask === todo.id ? (<input \r\n\t\t\t\ttype=\"text\"\r\n\t\t\t       \r\n\t\t\t\t   onChange={(e) => setEditingText(e.target.value)} \r\n\t\t\t\t   value={editingText} ></input>) : (<div>{todo.text}</div>)}\r\n\t\t\t\r\n\t\t<button\r\n\t\t\t\tclassName=\"completed\"\r\n\t\t\t\tonClick={(e) => taskCompleted(e, todo.id)}\r\n\t\t\t\t>\r\n\t\t\t\tCompleted\r\n\t\t\t\t</button>\r\n\r\n\t\t<button className=\"delete\" onClick={(e) => deleteButton(e, todo.id)}>\r\n\t\t\t\r\n\t\t\tDelete\r\n\t\t </button>\r\n\t\t\t{editTask === todo.id \r\n\t\t\t? (<button className='submitedit' onClick={() => editButton(todo.id)}> Submit Edit \r\n\t\t\t\t</button>) \r\n\t\t\t\t: (<button className=\"editbtn\"  onClick={() => setEditTask(todo.id)}> Edit Todos</button>\t) \r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t</li>\r\n\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t\t);\r\n\r\n}\r\n\r\n\r\nexport default Item;\r\n\r\n","import React from \"react\";\nimport Items from './Components/Items';\nimport './App.css';\n\n\nfunction App() {\n  \n \n    return(\n       <div className=\"app\">\n\n\n       <Items />\n      \n      \n     </div>\n    );\n  \n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}